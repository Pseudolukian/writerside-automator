name: Build production documentation

on:
  push:
    branches:
      - main

env:
  INSTANCE: 'Writerside/writerside'
  DOCKER_VERSION: '243.21565'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          # Print the values
          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"
          echo "ALGOLIA_ARTIFACT: $ALGOLIA_ARTIFACT"

          # Set the environment variables and outputs
          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
            artifacts/${{ env.ALGOLIA_ARTIFACT }}
          retention-days: 7
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Get Latest Tag
        id: get_tag
        run: echo "::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)"
      
      - name: Check and Print Tag
        run: |
          if [ -z "${{ steps.get_tag.outputs.tag }}" ]; then
            echo "Tag is empty. Exiting."
            exit 1
          else
            echo "Latest Tag: ${{ steps.get_tag.outputs.tag }}"
          fi        
      
      - name: Set environment variables
        run: |
          echo "TAG=${{ steps.get_tag.outputs.tag }}" >> $GITHUB_ENV
      
      - name: Download artifacts
        id: download_artifact
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts
      
      - name: Show artifact
        run: ls -l /home/runner/work/writerside_docs/writerside_docs/artifacts

      - name: Unzip artifacts
        run: |
          find /home/runner/work/writerside_docs/writerside_docs/artifacts -name '*.zip' -exec sh -c '
            for zipfile do
              dir="$(dirname "$zipfile")"
              filename="$(basename "$zipfile")"
              if echo "$filename" | grep -qi "algolia"; then
                echo "Распаковываем $filename в $dir/algolia"
                mkdir -p "$dir/algolia"
                unzip -O UTF-8 -qq -o "$zipfile" -d "$dir/algolia"
              else
                echo "Распаковываем $filename в $dir"
                unzip -O UTF-8 -qq -o "$zipfile" -d "$dir"
              fi
              echo "Удаляем $filename"
              rm "$zipfile"
            done
          ' sh {} +
      
      - name: List of files
        run: ls -l /home/runner/work/writerside_docs/writerside_docs/artifacts    
      
      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./.github/scripts/requirements.txt
  
      - name: Run upload script
        run: | 
          python ./.github/scripts/run_upload_doc_to_s3.py "${{ vars.S3_ENDPOINT }}" "${{ vars.S3_REGION_NAME }}" "${{ vars.S3_BUCKET_NAME }}" "${{ secrets.S3_ACCESS_KEY_ID }}" "${{ secrets.S3_SECRET_ACCESS_KEY }}" "/home/runner/work/writerside_docs/writerside_docs/artifacts" "versions" "${{ env.TAG }}" "['versions']"        